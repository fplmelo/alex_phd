pivot_longer(!species_name, "qudrants", "freq")
baseline_freq %>%
pivot_longer(!species_name, names_to = "qudrants", values_to = "freq")
baseline_freq %>%
pivot_longer(!species_name, names_to = "qudrants", values_to = "freq") %>%
filter(freq>12)
baseline_freq %>%
pivot_longer(!species_name, names_to = "qudrants", values_to = "freq") %>%
filter(freq>1)
baseline_freq %>%
pivot_longer(!species_name, names_to = "qudrants", values_to = "freq") %>%
filter(freq==1)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
select(species_name, C1)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
select(species_name, C1) %>%
replace(is.na(.), 0)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
select(species_name, C1) %>%
replace(is.na(.), 0) %>%
filter(C1>12)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
arrange(quadrant)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
arrange(species_name) %>%
group_by(species_name) %>%
replace(is.na(.), 0) %>%
summarise_if(is.numeric, ~ sum(., na.rm = TRUE)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/12
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
arrange(species_name)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
arrange(species_name) %>%
select(species_name, C1)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
arrange(species_name) %>%
select(species_name, C1) %>%
filter(C1>12)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
arrange(species_name) %>%
select(species_name, C1) %>%
replace(is.na(.), 0) %>%
filter(C1>12)
aseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0) %>%
str()
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0) %>%
glimpse()
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0) %>%
summarise_if(is.numeric, ~ sum(.))
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0) %>%
summarise_if(is.numeric, ~ sum(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/12
baseline_inc_freq %>%
select(C1, species_name) %>%
view()
baseline_inc_freq
baseline_inc_freq %>%
select(C1, species_name) %>%
view()
starwars
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0) %>%
summarise_if(is.numeric, ~ count(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/12
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
pivot_wider(names_from = plot, values_from = freq) %>%
group_by(species_name) %>%
replace(is.na(.), 0) %>%
summarise_if(is.numeric, ~ n(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/12
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2))
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n) %>%
#group_by(species_name) %>%
replace(is.na(.), 0)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n) %>%
#group_by(species_name) %>%
replace(is.na(.), 0) %>%
#summarise_if(is.numeric, ~ n(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44))))
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n) %>%
#group_by(species_name) %>%
replace(is.na(.), 0) %>%
#summarise_if(is.numeric, ~ n(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n) %>%
#group_by(species_name) %>%
replace(is.na(.), 0) %>%
#summarise_if(is.numeric, ~ n(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/12
baseline_inc_freq %>%
select(C1, species_name) %>%
view()
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n) %>%
#group_by(species_name) %>%
#replace(is.na(.), 0) %>%
#summarise_if(is.numeric, ~ n(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,44)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/1
baseline_inc_freq %>%
select(C1, species_name) %>%
view()
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
filter(n>12)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
#filter(freq!=0) %>%
count(species_name, plot) %>%
filter(n>12)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2))
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
filter(plot=="C1")
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
filter(plot=="C1") %>%
view()
baseline_prop
baseline<-read.csv("baseline_cover_test.csv")
baseline %>%
replace(is.na(.), 0)->baseline
baseline %>%
mutate_if(is.numeric,
~case_when(.==1~0.5,
.==2~2.5,
.==3~7.5,
.==4~17.5,
.==5~37.5,
.==6~62.5,
.==7~87.5,
.default = as.numeric(.)))->baseline_prop # proportion data
baseline %>%
mutate_if(is.numeric,
~case_when(.>0~1,
.default = as.numeric(.)))->baseline_freq # frequency data (0 & 1)
baseline_prop%>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "prop") %>% # create a long data with "quadrant" variable
mutate(plot=substr(quadrant, 1,2,3))
baseline_prop%>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "prop") %>% # create a long data with "quadrant" variable
mutate(plot=substr(quadrant, 1,3))
baseline<-read.csv("baseline_cover_test.csv")
baseline
baseline
baseline<-read.csv("baseline_cover_test.csv")
baseline %>%
replace(is.na(.), 0)->baseline
baseline %>%
mutate_if(is.numeric,
~case_when(.==1~0.5,
.==2~2.5,
.==3~7.5,
.==4~17.5,
.==5~37.5,
.==6~62.5,
.==7~87.5,
.default = as.numeric(.)))->baseline_prop # proportion data
baseline %>%
mutate_if(is.numeric,
~case_when(.>0~1,
.default = as.numeric(.)))->baseline_freq # frequency data (0 & 1)
## Coverage data
baseline_prop%>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "prop") %>% # create a long data with "quadrant" variable
mutate(plot=substr(quadrant, 1,3)) %>%
filter(prop!=0) %>% # filter only species that occurred per quadrant
pivot_wider(names_from = plot, values_from = prop) %>% # back to wide format
arrange(quadrant) %>% # arrange by quadrant
group_by(species_name) %>%
summarise_if(is.numeric, ~ mean(., na.rm = TRUE)) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))->baseline_prop_analyses # This creates a table grouping the average occurrence of species by quadrant
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,2)) %>%
filter(freq!=0) %>%
count(species_name, plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
pivot_wider(names_from = plot, values_from = n)
aseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
arrange(plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
arrange(plot) %>%
pivot_wider(names_from = plot, values_from = n)
baseline<-read.csv("baseline_cover_test.csv")
baseline %>%
replace(is.na(.), 0)->baseline
baseline %>%
mutate_if(is.numeric,
~case_when(.==1~0.5,
.==2~2.5,
.==3~7.5,
.==4~17.5,
.==5~37.5,
.==6~62.5,
.==7~87.5,
.default = as.numeric(.)))->baseline_prop # proportion data
baseline %>%
mutate_if(is.numeric,
~case_when(.>0~1,
.default = as.numeric(.)))->baseline_freq # frequency data (0 & 1)
## Coverage data
baseline_prop%>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "prop") %>% # create a long data with "quadrant" variable
mutate(plot=substr(quadrant, 1,3)) %>%
filter(prop!=0) %>% # filter only species that occurred per quadrant
pivot_wider(names_from = plot, values_from = prop) %>% # back to wide format
arrange(quadrant) %>% # arrange by quadrant
group_by(species_name) %>%
summarise_if(is.numeric, ~ mean(., na.rm = TRUE)) %>%
mutate(across(where(is.numeric), ~replace_na(., 0)))->baseline_prop_analyses # This creates a table grouping the average occurrence of species by quadrant
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
arrange(plot)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
arrange(plot) %>%
pivot_wider(names_from = plot, values_from = n)
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
arrange(plot) %>%
pivot_wider(names_from = plot, values_from = n) %>%
#group_by(species_name) %>%
#replace(is.na(.), 0) %>%
#summarise_if(is.numeric, ~ n(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,45)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/12
baseline_inc_freq %>%
select(C1, species_name) %>%
view()
baseline_inc_freq %>%
select(C01, species_name) %>%
view()
baseline_freq %>%
pivot_longer(!species_name, names_to = "quadrant", values_to = "freq") %>%
mutate(plot=substr(quadrant, 1,3)) %>%
filter(freq!=0) %>%
count(species_name, plot) %>%
arrange(plot) %>%
pivot_wider(names_from = plot, values_from = n) %>%
#group_by(species_name) %>%
replace(is.na(.), 0) %>%
#summarise_if(is.numeric, ~ n(.)) %>%
rbind(c("AAN_quad", as.numeric(rep(12,45)))) %>% # Here I am adding a line that contains just the the number of quadrants per plot, needed for INEXT analyses, later.
arrange(species_name) %>%
mutate_at(vars(!species_name), as.numeric)->baseline_inc_freq # relative frequencies n/12
baseline_inc_freq
baseline_prop_analyses %>%
mutate_if(is.numeric,
~case_when(.>0~1,
.default = as.numeric(.)))->baseline_freq_raw # presence/abscense data
iNEXT(as.data.frame(baseline_inc_freq[,-1]), q=c(0,1,2), datatype="incidence_freq")->res_inext
## Orders of True Diversity
ggiNEXT(res_inext, type=1, facet.var="Assemblage")
ggiNEXT(res_inext, type=1, facet.var="Order.q", color.var="Assemblage")
## Sample coverage
ggiNEXT(res_inext,type=2, facet.var="None", color.var="Assemblage")
baseline_inc_freq
MC_q<-MetaCommunity(baseline_prop)
baseline_prop
MC_p<-MetaCommunity(baseline_prop_analyses)
summary(MC_p)
divpart<-DivPart(q = 0, MC_p, Correction = "Best")
summary(divpart)
plot(divpart)
dp_p <- DivProfile(seq(0, 2, 1), MC_p, Biased = FALSE, NumberOfSimulations = 0) # takes too long, only run once
plot(dp_p)
base_nmds<-metaMDS(t(baseline_prop[,-1]))
cor
cor[cor < 0.8 | cor ==1]
cor[cor > .5 | cor ==1]
cor[cor > -.5 | cor ==1]
cor[cor > -.5]
cor[cor < -.5]
cor[cor < -0.5]
cor[cor < -0.3]
multi.corr
baseline_prop %>%
# mutate(mean.abund = rowMeans(select(., where(is.numeric)))) %>%
pivot_longer(!species_name,names_to = "quadrants", values_to = "prop") %>%
arrange(desc(prop)) %>%
pivot_wider(names_from = species_name, values_from = prop, values_fn = sum)->multi.corr
multi.corr
cor<-cor(multi.corr[,-1])
cor[cor < -0.3]
cor[cor < -0.2]
cor[cor > 0.5]
cor[cor > 0.5 | <1]
cor[cor > 0.5 || <1]
cor[cor > 0.5 | cor <1]
cor[cor > 0.5 | cor <.99]
